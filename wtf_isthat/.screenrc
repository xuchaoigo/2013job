#
# ~/.screenrc 
#

defc1 off
defflow off
escape ^Ss

ignorecase on
# msgwait 1

# no annoying audible bell, please
#  vbell on

# detach on hangup
autodetach on

# don't display the copyright page
startup_message off

# emulate .logout message
pow_detach_msg "Screen session of \$LOGNAME \$:cr:\$:nl:ended."


defscrollback 50000

# don't kill window after the process died
# zombie "^["

# enable support for the "alternate screen" capability in all windows
altscreen on

# enjoy the nethack-style messages
nethack on

# Default windows
screen -t local 0
screen  1
screen  2
screen  3
screen  4
screen  5

# Automatically started Programs
# screen -t root 0 su - 
# screen -t mail 1 mutt


################
#
# keybindings
#

#remove some stupid / dangerous key bindings
bind k
bind ^k
bind .
bind ^\
bind \\
bind ^h
bind h

#make them better
bind 'K' kill
bind ^s other

# alt '-'
bindkey "-" other


# MAIL
bind m eval "screen -t mail env LANG=zh_CN.UTF-8 mutt" "encoding UTF-8 GBK"
# bind m eval "setenv LANG zh_CN.UTF-8" "screen -t mail mutt" "utf8 on" 
# bind m eval "setenv LANG zh_CN.UTF-8" "screen -t mail mutt" "encoding UTF-8"
#bind m eval "screen -t mail mutt -Z" "exec fetchmail"
# bind m eval "screen -t mail mutt" "hstatus mail"

# BBS
#bind b eval "screen -t bbs luit -encoding GBK -- telnet -4 -8 bbs.ustc.edu.cn" "monitor on"
bind b eval "screen -t bbs telnet -4 -8 bbs.ustc.edu.cn" "monitor on" "hstatus bbs"

# ROOT
#bind R screen -t root su
#bind R screen -t '# |root:' su

# SSH
#bind a screen -t apple ssh -X apple
#bind p screen -t wq luit -encoding GBK -- ssh -X wq
#bind p eval "screen -t wq ssh -X wq" "hstatus 'ssh wq'"


bindkey "\033<C-;>" copy
#bindkey ^j select

slowpaste 1
maptimeout 100
# ^T is the escape
#bindkey "\024" mapdefault

# select an open window direct with ALT+ 0-9 
bindkey "\0331" select 1
bindkey "\0332" select 2
bindkey "\0333" select 3
bindkey "\0334" select 4
bindkey "\0335" select 5
bindkey "\0336" select 6
bindkey "\0337" select 7
bindkey "\0338" select 8
bindkey "\0339" select 9
bindkey "\0330" select 0
bindkey "\033`" select 0



# Change to left/right window in relation to current window
# (wraps on edges) ALT-jk
bindkey "\033j" prev
bindkey "\033k" next

# Prepend/append register [/] to the paste if ^a^] is pressed.
# This lets me have autoindent mode in vim.
register [ "\033:se paste\015a"
register ] "\033:se nopaste\015a"
bind  paste [.]


# Enter copy mode (PgUp/PgDn to move)
# INSERT alternativly ALT+PgUp
bindkey -k kI copy
bindkey [5~ copy 

# Paste copy buffer
# ALT-INSERT
bindkey "[2~" paste . 


# Shift current window left/right in relation to current window
# (!broken, attempting to fix)
# ALT-<> (for those that have trouble understanding ALT-SHIFT-,.)
# NOT POSSIBLE FOR NOW!
# bindkey "<" eval number !'echo $((WINDOW-1))'
# bindkey ">" eval number !'echo $((WINDOW+1))'

# Moving in regions
bind j eval 'focus down' 'fit'
bind k eval 'focus up' 'fit'
bind = eval 'resize =' 'fit'
bind _ eval 'resize max' 'fit'
bind Q eval 'only' 'fit'
bind S eval 'split' 'fit'
# bind + resize +1
# bind - resize -1

#######################
# misc
#
#
# defnonblock 1
# blankerprg rain -d 100
# idle 30 blanker

#encoding UTF-8
#defencoding UTF-8
#defutf8 on

#defencoding GBK
#encoding GBK UTF-8
#setenv LANG zh_CN.GBK

# This is how one can set a reattach password:
# password ODSJQf.4IJN7E    # "1234"

#unsetenv SSH_AUTH_SOCK
#setenv SSH_AUTH_SOCK /tmp/ssh-agent-sock-screen
#setenv PROMPT_COMMAND 'echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD}\007"'

#####################
# captions
#
# set every new windows hardstatus line to somenthing descriptive
#defhstatus "SCREEN ^En: ^Et"
#hardstatus string "[%C%A] screen: %h (%t)"
#shelltitle '$ |sh'
# caption always "%3n %t%? @%u%?%? [%h]%?%=%c"
# hardstatus alwaysignore
# hardstatus alwayslastline "%Lw"
#caption always "%3n %t%? (%u)%?%?: %h%?"

#backtick 1 60 0 env LANG=zh_CN.GBK date
#caption always "%?%{b}%-Lw%?%{+bu r}%n*%f%t %{R}%h%{-bu}%?(%u)%?%?%{b}%+Lw%?%=%1`%C:%s"

#hardstatus string "%t %h"
hardstatus string "%h"
caption always "%{=r}%?%{b}%-Lw%?%{+bu r}%n*%f %t%{R}%{-bu}%?%{b}%+Lw%: %?%{+b B}%=%C:%s"


#################
# term infos
#
terminfo rxvt-unicode 'Co#256'
#  terminfo rxvt-unicode 'AB=\E[48;2;%dm'
#  terminfo rxvt-unicode 'AF=\E[38;2;%dm'

#terminfo rxvt-unicode 'smso=\E[3m:rmso=\E[23m:so=\E[3m:se=\E[23m'
#terminfo rxvt-unicode 'sitm=\E[7m:ritm=\E[27m:ZH=\E[7m:ZR=\E[27m'
#terminfo rxvt-unicode 'rev=\E[3m:mr=\E[3m'

# screen turns italic to reverse
# so cheat it to turn blink to italic :(
terminfo rxvt-unicode 'blink=\E[3m:mb=\E[3m'

# untested from http://frexx.de/xterm-256-notes/
# allow bold colors - necessary for some reason
# attrcolor b ".I" 
# tell screen how to set colors. AB = background, AF=foreground
# termcapinfo xterm 'Co#256:AB=\E[48;5;%dm:AF=\E[38;5;%dm'
# erase background with current bg color
# defbce "on" 

# Set the hardstatus prop on gui terms to set the titlebar/icon title
#termcapinfo xterm*|rxvt*|kterm*|Eterm* hs:ts=\E]0;:fs=\007:ds=\E]0;\007
#termcapinfo xterm|rxvt* 'hs:ts=\E]2;:fs=\007:ds=\E]2;screen\007'

# Have screen use xterm's normal screen buffer (which includes scrollback)
# This allows me to scroll using the terminal scrollbar or Shift+PageUp
# while using screen. 
#termcapinfo xterm|xterms|xs|rxvt|rxvt-unicode ti@:te@

# advertise hardstatus support to $TERMCAP
# termcapinfo  * '' 'hs:ts=\E_:fs=\E\\:ds=\E_\E\\'

# ################
# #
# # xterm tweaks
# #
# 
# #xterm understands both im/ic and doesn't have a status line.
# #Note: Do not specify im and ic in the real termcap/info file as
# #some programs (e.g. vi) will not work anymore.
# termcap  xterm hs@:cs=\E[%i%d;%dr:im=\E[4h:ei=\E[4l
# terminfo xterm hs@:cs=\E[%i%p1%d;%p2%dr:im=\E[4h:ei=\E[4l
# 
# #80/132 column switching must be enabled for ^AW to work
# #change init sequence to not switch width
# termcapinfo  xterm Z0=\E[?3h:Z1=\E[?3l:is=\E[r\E[m\E[2J\E[H\E[?7h\E[?1;4;6l
# 
# # Make the output buffer large for (fast) xterms.
# #termcapinfo xterm* OL=10000
# termcapinfo xterm* OL=100
# 
# # tell screen that xterm can switch to dark background and has function
# # keys.
# termcapinfo xterm 'VR=\E[?5h:VN=\E[?5l'
# termcapinfo xterm 'k1=\E[11~:k2=\E[12~:k3=\E[13~:k4=\E[14~'
# termcapinfo xterm 'kh=\EOH:kI=\E[2~:kD=\E[3~:kH=\EOF:kP=\E[5~:kN=\E[6~'
# 
# # special xterm hardstatus: use the window title.
# termcapinfo xterm 'hs:ts=\E]2;:fs=\007:ds=\E]2;screen\007'
# 
# #terminfo xterm 'vb=\E[?5h$<200/>\E[?5l'
# termcapinfo xterm 'vi=\E[?25l:ve=\E[34h\E[?25h:vs=\E[34l'
# 
# # emulate part of the 'K' charset
# termcapinfo   xterm 'XC=K%,%\E(B,[\304,\\\\\326,]\334,{\344,|\366,}\374,~\337'
# 
# # xterm-52 tweaks:
# # - uses background color for delete operations
# termcapinfo xterm* be
# 
# ################
# #
# # wyse terminals
# #
# 
# #wyse-75-42 must have flow control (xo = "terminal uses xon/xoff")
# #essential to have it here, as this is a slow terminal.
# termcapinfo wy75-42 xo:hs@
# 
# # New termcap sequences for cursor application mode.
# termcapinfo wy* CS=\E[?1h:CE=\E[?1l:vi=\E[?25l:ve=\E[?25h:VR=\E[?5h:VN=\E[?5l:cb=\E[1K:CD=\E[1J
# 
# ################
# #
# # other terminals
# #
# 
# # make hp700 termcap/info better
# termcapinfo  hp700 'Z0=\E[?3h:Z1=\E[?3l:hs:ts=\E[62"p\E[0$~\E[2$~\E[1$}:fs=\E[0}\E[61"p:ds=\E[62"p\E[1$~\E[61"p:ic@'
# 
# # Extend the vt100 desciption by some sequences.
# termcap  vt100* ms:AL=\E[%dL:DL=\E[%dM:UP=\E[%dA:DO=\E[%dB:LE=\E[%dD:RI=\E[%dC
# terminfo vt100* ms:AL=\E[%p1%dL:DL=\E[%p1%dM:UP=\E[%p1%dA:DO=\E[%p1%dB:LE=\E[%p1%dD:RI=\E[%p1%dC
# termcapinfo linux C8
# # old rxvt versions also need this
# # termcapinfo rxvt C8


